\begin{Verbatim}[commandchars=\\\{\}]
\PYG{k+kn}{import} \PYG{n+nn}{structures}
\PYG{k+kn}{import} \PYG{n+nn}{update}
\PYG{k+kn}{import} \PYG{n+nn}{csv}


\PYG{k}{class} \PYG{n+nc}{Node}\PYG{p}{:}                                                                     \PYG{c+c1}{\PYGZsh{}STORES DETAILS ABOUT INDIVIDUAL NODES}
    \PYG{k}{def} \PYG{n+nf+fm}{\PYGZus{}\PYGZus{}init\PYGZus{}\PYGZus{}}\PYG{p}{(}\PYG{n+nb+bp}{self}\PYG{p}{,} \PYG{n}{id\PYGZus{}tag}\PYG{p}{,} \PYG{n}{prev\PYGZus{}node}\PYG{p}{,} \PYG{n}{end}\PYG{p}{,} \PYG{n}{nbrs}\PYG{p}{):}
        \PYG{k}{try}\PYG{p}{:}                                                                    \PYG{c+c1}{\PYGZsh{}CHECK ID IS IN CORRECT FORM}
            \PYG{n}{pos} \PYG{o}{=} \PYG{n}{id\PYGZus{}tag}\PYG{o}{.}\PYG{n}{split}\PYG{p}{(}\PYG{l+s+s1}{\PYGZsq{}\PYGZhy{}\PYGZsq{}}\PYG{p}{)}
            \PYG{n}{x} \PYG{o}{=} \PYG{n+nb}{int}\PYG{p}{(}\PYG{n}{pos}\PYG{p}{[}\PYG{l+m+mi}{0}\PYG{p}{])}
            \PYG{n}{y} \PYG{o}{=} \PYG{n+nb}{int}\PYG{p}{(}\PYG{n}{pos}\PYG{p}{[}\PYG{l+m+mi}{1}\PYG{p}{])}
            \PYG{k}{if} \PYG{n+nb}{len}\PYG{p}{(}\PYG{n}{pos}\PYG{p}{)} \PYG{o}{\PYGZgt{}} \PYG{l+m+mi}{2} \PYG{p}{:} \PYG{k}{raise} \PYG{n+ne}{ValueError}
        \PYG{k}{except}\PYG{p}{:}
            \PYG{k}{raise} \PYG{n+ne}{TypeError}\PYG{p}{(}\PYG{l+s+s1}{\PYGZsq{}ID should be in the form int\PYGZhy{}int\PYGZsq{}}\PYG{p}{)}
        \PYG{k}{if} \PYG{o+ow}{not} \PYG{n+nb}{isinstance}\PYG{p}{(}\PYG{n}{prev\PYGZus{}node}\PYG{p}{,} \PYG{n}{Node}\PYG{p}{)} \PYG{o+ow}{and} \PYG{n}{prev\PYGZus{}node} \PYG{o}{!=} \PYG{n+nb+bp}{None}\PYG{p}{:}
            \PYG{k}{raise} \PYG{n+ne}{TypeError}\PYG{p}{(}\PYG{l+s+s1}{\PYGZsq{}Previous node should be of type Node\PYGZsq{}}\PYG{p}{)}
        \PYG{k}{if} \PYG{o+ow}{not} \PYG{n+nb}{isinstance}\PYG{p}{(}\PYG{n}{end}\PYG{p}{,} \PYG{n}{Node}\PYG{p}{)} \PYG{o+ow}{and} \PYG{n}{end} \PYG{o}{!=} \PYG{n+nb+bp}{None}\PYG{p}{:}
            \PYG{k}{raise} \PYG{n+ne}{TypeError}\PYG{p}{(}\PYG{l+s+s1}{\PYGZsq{}End node should be of type Node\PYGZsq{}}\PYG{p}{)}
        \PYG{k}{try}\PYG{p}{:}                                                                    \PYG{c+c1}{\PYGZsh{}CHECK NBR IDS IN CORRECT FORM}
            \PYG{k}{for} \PYG{n}{nbr} \PYG{o+ow}{in} \PYG{n}{nbrs}\PYG{p}{:}
                \PYG{n}{pos} \PYG{o}{=} \PYG{n}{id\PYGZus{}tag}\PYG{o}{.}\PYG{n}{split}\PYG{p}{(}\PYG{l+s+s1}{\PYGZsq{}\PYGZhy{}\PYGZsq{}}\PYG{p}{)}
                \PYG{n}{x} \PYG{o}{=} \PYG{n+nb}{int}\PYG{p}{(}\PYG{n}{pos}\PYG{p}{[}\PYG{l+m+mi}{0}\PYG{p}{])}
                \PYG{n}{y} \PYG{o}{=} \PYG{n+nb}{int}\PYG{p}{(}\PYG{n}{pos}\PYG{p}{[}\PYG{l+m+mi}{1}\PYG{p}{])}
                \PYG{k}{if} \PYG{n+nb}{len}\PYG{p}{(}\PYG{n}{pos}\PYG{p}{)} \PYG{o}{\PYGZgt{}} \PYG{l+m+mi}{2} \PYG{p}{:} \PYG{k}{raise} \PYG{n+ne}{ValueError}
        \PYG{k}{except}\PYG{p}{:}
            \PYG{k}{raise} \PYG{n+ne}{TypeError}\PYG{p}{(}\PYG{l+s+s1}{\PYGZsq{}Neighbour ID should be in the form int\PYGZhy{}int\PYGZsq{}}\PYG{p}{)}

        \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{id} \PYG{o}{=} \PYG{n}{id\PYGZus{}tag}
        \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{prev} \PYG{o}{=} \PYG{n}{prev\PYGZus{}node}
        \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{cost} \PYG{o}{=} \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{g}\PYG{p}{(}\PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{prev}\PYG{p}{)}                                           \PYG{c+c1}{\PYGZsh{}CALCULATE STARTING COST + HEURISTIC}
        \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{heuristic} \PYG{o}{=} \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{h}\PYG{p}{(}\PYG{n}{end}\PYG{p}{)}
        \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{nbrs} \PYG{o}{=} \PYG{n}{nbrs}
        \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{queue\PYGZus{}index} \PYG{o}{=} \PYG{l+m+mi}{0}
        \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{visited} \PYG{o}{=} \PYG{n+nb+bp}{False}

    \PYG{k}{def} \PYG{n+nf}{get\PYGZus{}id}\PYG{p}{(}\PYG{n+nb+bp}{self}\PYG{p}{):}                                                           \PYG{c+c1}{\PYGZsh{}RETURNS NODE\PYGZsq{}S ID}
        \PYG{k}{return} \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{id}

    \PYG{k}{def} \PYG{n+nf}{get\PYGZus{}x}\PYG{p}{(}\PYG{n+nb+bp}{self}\PYG{p}{):}                                                            \PYG{c+c1}{\PYGZsh{}RETURNS NODE\PYGZsq{}S X\PYGZhy{}POS}
        \PYG{k}{return} \PYG{n+nb}{int}\PYG{p}{(}\PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{id}\PYG{o}{.}\PYG{n}{split}\PYG{p}{(}\PYG{l+s+s1}{\PYGZsq{}\PYGZhy{}\PYGZsq{}}\PYG{p}{)[}\PYG{l+m+mi}{0}\PYG{p}{])}

    \PYG{k}{def} \PYG{n+nf}{get\PYGZus{}y}\PYG{p}{(}\PYG{n+nb+bp}{self}\PYG{p}{):}                                                            \PYG{c+c1}{\PYGZsh{}RETURNS NODE\PYGZsq{}S Y\PYGZhy{}POS}
        \PYG{k}{return} \PYG{n+nb}{int}\PYG{p}{(}\PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{id}\PYG{o}{.}\PYG{n}{split}\PYG{p}{(}\PYG{l+s+s1}{\PYGZsq{}\PYGZhy{}\PYGZsq{}}\PYG{p}{)[}\PYG{l+m+mi}{1}\PYG{p}{])}

    \PYG{k}{def} \PYG{n+nf}{get\PYGZus{}pos}\PYG{p}{(}\PYG{n+nb+bp}{self}\PYG{p}{):}                                                          \PYG{c+c1}{\PYGZsh{}RETURNS COMBINED X\PYGZhy{}POS AND Y\PYGZhy{}POS}
        \PYG{k}{return} \PYG{p}{[}\PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{get\PYGZus{}x}\PYG{p}{(),} \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{get\PYGZus{}y}\PYG{p}{()]}

    \PYG{k}{def} \PYG{n+nf}{get\PYGZus{}prev}\PYG{p}{(}\PYG{n+nb+bp}{self}\PYG{p}{):}                                                         \PYG{c+c1}{\PYGZsh{}RETURNS NODE USED TO EXPLORE CURRENT}
        \PYG{k}{return} \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{prev}

    \PYG{k}{def} \PYG{n+nf}{get\PYGZus{}cost}\PYG{p}{(}\PYG{n+nb+bp}{self}\PYG{p}{):}                                                         \PYG{c+c1}{\PYGZsh{}RETURNS NODE\PYGZsq{}S COST}
        \PYG{k}{return} \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{cost}

    \PYG{k}{def} \PYG{n+nf}{get\PYGZus{}nbrs}\PYG{p}{(}\PYG{n+nb+bp}{self}\PYG{p}{):}                                                         \PYG{c+c1}{\PYGZsh{}RETURNS NODE\PYGZsq{}S NEIGHBOURS}
        \PYG{k}{return} \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{nbrs}

    \PYG{k}{def} \PYG{n+nf}{get\PYGZus{}visited}\PYG{p}{(}\PYG{n+nb+bp}{self}\PYG{p}{):}                                                      \PYG{c+c1}{\PYGZsh{}RETURNS IF NODE HAS BEEN VISITED}
        \PYG{k}{return} \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{visited}

    \PYG{k}{def} \PYG{n+nf}{set\PYGZus{}prev}\PYG{p}{(}\PYG{n+nb+bp}{self}\PYG{p}{,} \PYG{n}{value}\PYG{p}{):}                                                  \PYG{c+c1}{\PYGZsh{}CHECK THAT PREVIOUS IS A NODE}
        \PYG{k}{if} \PYG{o+ow}{not} \PYG{n+nb}{isinstance}\PYG{p}{(}\PYG{n}{value}\PYG{p}{,} \PYG{n}{Node}\PYG{p}{)} \PYG{p}{:} \PYG{k}{raise} \PYG{n+ne}{TypeError}\PYG{p}{(}\PYG{l+s+s1}{\PYGZsq{}Previous node must be of type Node\PYGZsq{}}\PYG{p}{)}
        \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{prev} \PYG{o}{=} \PYG{n}{value}

    \PYG{k}{def} \PYG{n+nf}{set\PYGZus{}visited}\PYG{p}{(}\PYG{n+nb+bp}{self}\PYG{p}{):}                                                      \PYG{c+c1}{\PYGZsh{}SET VISITED TO TRUE}
        \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{visited} \PYG{o}{=} \PYG{n+nb+bp}{True}

    \PYG{k}{def} \PYG{n+nf}{update\PYGZus{}cost}\PYG{p}{(}\PYG{n+nb+bp}{self}\PYG{p}{,} \PYG{n}{prev}\PYG{p}{):}                                                \PYG{c+c1}{\PYGZsh{}UPDATE COST OF NODE WITH NEW NODE}
        \PYG{n}{new\PYGZus{}cost} \PYG{o}{=} \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{g}\PYG{p}{(}\PYG{n}{prev}\PYG{p}{)}
        \PYG{k}{if} \PYG{n}{new\PYGZus{}cost} \PYG{o}{\PYGZlt{}} \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{cost}\PYG{p}{:}                                                \PYG{c+c1}{\PYGZsh{}BETTER ROUTE FOUND TO NODE}
            \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{cost} \PYG{o}{=} \PYG{n}{new\PYGZus{}cost}
            \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{prev} \PYG{o}{=} \PYG{n}{prev}

    \PYG{k}{def} \PYG{n+nf}{g}\PYG{p}{(}\PYG{n+nb+bp}{self}\PYG{p}{,} \PYG{n}{node}\PYG{p}{):}                                                          \PYG{c+c1}{\PYGZsh{}RETURNS COST OF PREV PLUS EDGE WEIGHT}
        \PYG{k}{if} \PYG{n}{node} \PYG{o}{==} \PYG{n+nb+bp}{None} \PYG{p}{:} \PYG{k}{return} \PYG{l+m+mi}{0}
        \PYG{k}{return} \PYG{n}{node}\PYG{o}{.}\PYG{n}{get\PYGZus{}cost}\PYG{p}{()} \PYG{o}{+} \PYG{n+nb}{abs}\PYG{p}{(}\PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{get\PYGZus{}x}\PYG{p}{()} \PYG{o}{\PYGZhy{}} \PYG{n}{node}\PYG{o}{.}\PYG{n}{get\PYGZus{}x}\PYG{p}{())} \PYG{o}{+} \PYG{n+nb}{abs}\PYG{p}{(}\PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{get\PYGZus{}y}\PYG{p}{()} \PYG{o}{\PYGZhy{}} \PYG{n}{node}\PYG{o}{.}\PYG{n}{get\PYGZus{}y}\PYG{p}{())}

    \PYG{k}{def} \PYG{n+nf}{h}\PYG{p}{(}\PYG{n+nb+bp}{self}\PYG{p}{,} \PYG{n}{end}\PYG{p}{):}                                                           \PYG{c+c1}{\PYGZsh{}RETURNS MANHATTAN DISTANCE BETWEEN NODE + END}
        \PYG{k}{if} \PYG{n}{end} \PYG{o}{==} \PYG{n+nb+bp}{None} \PYG{p}{:} \PYG{k}{return} \PYG{l+m+mi}{0}
        \PYG{k}{return} \PYG{n+nb}{abs}\PYG{p}{(}\PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{get\PYGZus{}x}\PYG{p}{()} \PYG{o}{\PYGZhy{}} \PYG{n}{end}\PYG{o}{.}\PYG{n}{get\PYGZus{}x}\PYG{p}{())} \PYG{o}{+} \PYG{n+nb}{abs}\PYG{p}{(}\PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{get\PYGZus{}y}\PYG{p}{()} \PYG{o}{\PYGZhy{}} \PYG{n}{end}\PYG{o}{.}\PYG{n}{get\PYGZus{}y}\PYG{p}{())}

    \PYG{k}{def} \PYG{n+nf}{score}\PYG{p}{(}\PYG{n+nb+bp}{self}\PYG{p}{):}                                                            \PYG{c+c1}{\PYGZsh{}RETURNS COMBINED COST AND HEURISTIC}
        \PYG{k}{return} \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{cost} \PYG{o}{+} \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{heuristic}


\PYG{k}{def} \PYG{n+nf}{shortest\PYGZus{}path}\PYG{p}{(}\PYG{n}{adj\PYGZus{}list}\PYG{p}{,} \PYG{n}{start\PYGZus{}pos}\PYG{p}{,} \PYG{n}{end\PYGZus{}pos}\PYG{p}{):}                                \PYG{c+c1}{\PYGZsh{}RETURNS SHORTEST PATH BETWEEN TWO POINTS}
    \PYG{n}{nodes} \PYG{o}{=} \PYG{n}{structures}\PYG{o}{.}\PYG{n}{Hash\PYGZus{}Table}\PYG{p}{(}\PYG{n}{adj\PYGZus{}list}\PYG{o}{.}\PYG{n}{length}\PYG{p}{())}                            \PYG{c+c1}{\PYGZsh{}LOOK\PYGZhy{}UP OF NODE OBJECTS BY ID}
    \PYG{n}{queue} \PYG{o}{=} \PYG{n}{structures}\PYG{o}{.}\PYG{n}{Heap}\PYG{p}{()}                                                   \PYG{c+c1}{\PYGZsh{}QUEUE OF NODES TO BE EXPLORED}

    \PYG{n}{start\PYGZus{}id} \PYG{o}{=} \PYG{n+nb}{str}\PYG{p}{(}\PYG{n}{start\PYGZus{}pos}\PYG{p}{[}\PYG{l+m+mi}{0}\PYG{p}{])} \PYG{o}{+} \PYG{l+s+s1}{\PYGZsq{}\PYGZhy{}\PYGZsq{}} \PYG{o}{+} \PYG{n+nb}{str}\PYG{p}{(}\PYG{n}{start\PYGZus{}pos}\PYG{p}{[}\PYG{l+m+mi}{1}\PYG{p}{])}                      \PYG{c+c1}{\PYGZsh{}CREATE START/END NODES}
    \PYG{n}{start\PYGZus{}nbrs} \PYG{o}{=} \PYG{n}{adj\PYGZus{}list}\PYG{p}{[}\PYG{n}{start\PYGZus{}id}\PYG{p}{]}
    \PYG{n}{start} \PYG{o}{=} \PYG{n}{Node}\PYG{p}{(}\PYG{n}{start\PYGZus{}id}\PYG{p}{,} \PYG{n+nb+bp}{None}\PYG{p}{,} \PYG{n+nb+bp}{None}\PYG{p}{,} \PYG{n}{start\PYGZus{}nbrs}\PYG{p}{)}
    \PYG{n}{end\PYGZus{}id} \PYG{o}{=} \PYG{n+nb}{str}\PYG{p}{(}\PYG{n}{end\PYGZus{}pos}\PYG{p}{[}\PYG{l+m+mi}{0}\PYG{p}{])} \PYG{o}{+} \PYG{l+s+s1}{\PYGZsq{}\PYGZhy{}\PYGZsq{}} \PYG{o}{+} \PYG{n+nb}{str}\PYG{p}{(}\PYG{n}{end\PYGZus{}pos}\PYG{p}{[}\PYG{l+m+mi}{1}\PYG{p}{])}
    \PYG{n}{end\PYGZus{}nbrs} \PYG{o}{=} \PYG{n}{adj\PYGZus{}list}\PYG{p}{[}\PYG{n}{end\PYGZus{}id}\PYG{p}{]}
    \PYG{n}{end} \PYG{o}{=} \PYG{n}{Node}\PYG{p}{(}\PYG{n}{end\PYGZus{}id}\PYG{p}{,} \PYG{n+nb+bp}{None}\PYG{p}{,} \PYG{n+nb+bp}{None}\PYG{p}{,} \PYG{n}{end\PYGZus{}nbrs}\PYG{p}{)}

    \PYG{n}{nodes\PYGZus{}visited} \PYG{o}{=} \PYG{l+m+mi}{0}                                                           \PYG{c+c1}{\PYGZsh{}USED IN UPDATE.TXT FILE}
    \PYG{n}{total\PYGZus{}nodes} \PYG{o}{=} \PYG{n}{adj\PYGZus{}list}\PYG{o}{.}\PYG{n}{length}\PYG{p}{()}
    \PYG{n}{queue}\PYG{o}{.}\PYG{n}{push}\PYG{p}{(}\PYG{n}{start}\PYG{p}{)}
    \PYG{n}{nodes}\PYG{p}{[}\PYG{n}{start}\PYG{o}{.}\PYG{n}{get\PYGZus{}id}\PYG{p}{()]} \PYG{o}{=} \PYG{n}{start}                                               \PYG{c+c1}{\PYGZsh{}NODES ADDED TO LOOK\PYGZhy{}UP TABLE ONCE CREATED}

    \PYG{k}{while} \PYG{n}{queue}\PYG{o}{.}\PYG{n}{length}\PYG{p}{()} \PYG{o}{\PYGZgt{}} \PYG{l+m+mi}{0}\PYG{p}{:}                                                   \PYG{c+c1}{\PYGZsh{}IF QUEUE EMPTY THERE IS NO ROUTE BETWEEN THEM}
        \PYG{n}{current} \PYG{o}{=} \PYG{n}{queue}\PYG{o}{.}\PYG{n}{pop}\PYG{p}{()}
        \PYG{n}{current}\PYG{o}{.}\PYG{n}{set\PYGZus{}visited}\PYG{p}{()}
        \PYG{k}{if} \PYG{n}{current}\PYG{o}{.}\PYG{n}{get\PYGZus{}id}\PYG{p}{()} \PYG{o}{==} \PYG{n}{end}\PYG{o}{.}\PYG{n}{get\PYGZus{}id}\PYG{p}{():}                                    \PYG{c+c1}{\PYGZsh{}SHORTEST PATH HAS BEEN FOUND}
            \PYG{n}{path} \PYG{o}{=} \PYG{n}{get\PYGZus{}path}\PYG{p}{([],} \PYG{n}{current}\PYG{p}{,} \PYG{n}{start}\PYG{p}{)}
            \PYG{k}{return} \PYG{n}{path}

        \PYG{k}{for} \PYG{n}{nbr\PYGZus{}id} \PYG{o+ow}{in} \PYG{n}{current}\PYG{o}{.}\PYG{n}{get\PYGZus{}nbrs}\PYG{p}{():}                                       \PYG{c+c1}{\PYGZsh{}EXPLORE CURRENT NODE\PYGZsq{}S NBRS}
            \PYG{n}{nbr} \PYG{o}{=} \PYG{n}{nodes}\PYG{p}{[}\PYG{n}{nbr\PYGZus{}id}\PYG{p}{]}
            \PYG{k}{if} \PYG{n}{nbr} \PYG{o}{==} \PYG{n+nb+bp}{None}\PYG{p}{:}                                                     \PYG{c+c1}{\PYGZsh{}NODE NOT CREATED YET}
                \PYG{n}{nbr\PYGZus{}nbrs} \PYG{o}{=} \PYG{n}{adj\PYGZus{}list}\PYG{p}{[}\PYG{n}{nbr\PYGZus{}id}\PYG{p}{]}
                \PYG{n}{nbr} \PYG{o}{=} \PYG{n}{Node}\PYG{p}{(}\PYG{n}{nbr\PYGZus{}id}\PYG{p}{,} \PYG{n}{current}\PYG{p}{,} \PYG{n}{end}\PYG{p}{,} \PYG{n}{nbr\PYGZus{}nbrs}\PYG{p}{)}                      \PYG{c+c1}{\PYGZsh{}CREATE AND ADD TO QUEUE}
                \PYG{n}{queue}\PYG{o}{.}\PYG{n}{push}\PYG{p}{(}\PYG{n}{nbr}\PYG{p}{)}
                \PYG{n}{nodes}\PYG{p}{[}\PYG{n}{nbr\PYGZus{}id}\PYG{p}{]} \PYG{o}{=} \PYG{n}{nbr}
            \PYG{k}{elif} \PYG{o+ow}{not} \PYG{n}{nbr}\PYG{o}{.}\PYG{n}{get\PYGZus{}visited}\PYG{p}{():}                                         \PYG{c+c1}{\PYGZsh{}NODE CREATED BUT UNVISITED}
                \PYG{n}{nbr}\PYG{o}{.}\PYG{n}{update\PYGZus{}cost}\PYG{p}{(}\PYG{n}{current}\PYG{p}{)}                                        \PYG{c+c1}{\PYGZsh{}UPDATE COST + POS IN QUEUE}
                \PYG{n}{queue}\PYG{o}{.}\PYG{n}{update}\PYG{p}{(}\PYG{n}{nbr}\PYG{o}{.}\PYG{n}{queue\PYGZus{}index}\PYG{p}{)}

        \PYG{n}{update}\PYG{o}{.}\PYG{n}{set\PYGZus{}update}\PYG{p}{(}\PYG{n+nb}{str}\PYG{p}{(}\PYG{n}{nodes\PYGZus{}visited}\PYG{p}{)} \PYG{o}{+} \PYG{l+s+s1}{\PYGZsq{} of \PYGZsq{}} \PYG{o}{+} \PYG{n+nb}{str}\PYG{p}{(}\PYG{n}{total\PYGZus{}nodes}\PYG{p}{)} \PYG{o}{+} \PYG{l+s+s1}{\PYGZsq{} Nodes Visited\PYGZsq{}}\PYG{p}{)}
        \PYG{n}{nodes\PYGZus{}visited} \PYG{o}{+=} \PYG{l+m+mi}{1}
    \PYG{k}{return} \PYG{n+nb+bp}{None}


\PYG{k}{def} \PYG{n+nf}{get\PYGZus{}path}\PYG{p}{(}\PYG{n}{path}\PYG{p}{,} \PYG{n}{current}\PYG{p}{,} \PYG{n}{start}\PYG{p}{):}                                             \PYG{c+c1}{\PYGZsh{}LOOP BACK THROUGH PREV NODES TO START}
    \PYG{k}{while} \PYG{n}{current} \PYG{o}{!=} \PYG{n}{start}\PYG{p}{:}
        \PYG{n}{path}\PYG{o}{.}\PYG{n}{append}\PYG{p}{(}\PYG{n}{current}\PYG{o}{.}\PYG{n}{get\PYGZus{}pos}\PYG{p}{())}                                          \PYG{c+c1}{\PYGZsh{}ADD PREVIOUS NODES TO PATH}
        \PYG{n}{current} \PYG{o}{=} \PYG{n}{current}\PYG{o}{.}\PYG{n}{get\PYGZus{}prev}\PYG{p}{()}
    \PYG{n}{path}\PYG{o}{.}\PYG{n}{append}\PYG{p}{(}\PYG{n}{current}\PYG{o}{.}\PYG{n}{get\PYGZus{}pos}\PYG{p}{())}
    \PYG{k}{return} \PYG{n}{path}
\end{Verbatim}
